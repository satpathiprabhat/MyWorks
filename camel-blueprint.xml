<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 
           http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <bean id="yesterdayDate" class="org.apache.camel.language.simple.SimpleExpression">
        <argument value="${date:now-1d:yyyyMMdd}" />
    </bean>

    <bean id="sftpConfig" class="java.util.HashMap">
        <argument>
            <map>
                <entry key="username" value="your_sftp_user"/>
                <entry key="password" value="your_sftp_password"/>
                <entry key="privateKeyFile" value="/path/to/private/key"/>
                <entry key="knownHostsFile" value="/path/to/known_hosts"/>
            </map>
        </argument>
    </bean>

    <camelContext id="camel" xmlns="http://camel.apache.org/schema/blueprint">
        <route id="file-to-sftp">
            <!-- Read files from local folder -->
            <from uri="file:/local/source/folder?noop=true"/>
            
            <!-- Set header for backdated folder -->
            <setHeader name="sftpFolder">
                <simple>${date:now-1d:yyyyMMdd}</simple>
            </setHeader>
            
            <!-- Transfer files to SFTP in backdated folder -->
            <to uri="sftp://sftp.server.com/target/folder/${header.sftpFolder}?username={{sftp.username}}&password={{sftp.password}}&binary=true"/>
        </route>

        <route id="create-done-file">
            <!-- Wait until all files are transferred -->
            <from uri="file:/local/source/folder?noop=true&idempotent=true"/>
            
            <!-- Aggregate completion -->
            <aggregate strategyRef="groupedExchangeStrategy" completionTimeout="5000">
                <correlationExpression>
                    <constant>true</constant>
                </correlationExpression>

                <completionSize>
                    <simple>${exchangeProperty.CamelBatchSize}</simple>
                </completionSize>

                <to uri="file:/local/source/folder?fileName=done.txt"/>
            </aggregate>
        </route>
    </camelContext>

    <bean id="groupedExchangeStrategy" class="org.apache.camel.processor.aggregate.GroupedExchangeAggregationStrategy"/>
</blueprint>